#/usr/bin/env python

import re
import sys

def usage():
    print '\tPython files merging tool'
    print '\t\t usage ./pys2py SOURCE.py destfile'
    print '\t\t where SOURCE is the main .py script file that has local dependeces'



def is_local(import_lib):
    return 'local' in import_lib


def find_local_imports(line):
    
    local_imports = []

    mtch = re.match(r'import (.*)', line)
    if mtch:
        imports = mtch.group(1).split(',')
        for i in imports:
            if is_local(i):
                local_imports.append(i)
        return local_imports

    mtch = re.match(r'from (.*) import.*', line)
    if mtch:
        i = mtch.group(1)
        if is_local(i):
            local_imports.append(i)

    return local_imports


def remove_locals(line, local_imports):
    if re.match(r'from .*', line):
        # from A import ... A is the only lib, so
        # the line must be removed
        return ''

    # The import is like: import a[, b, c]

    # import local1, local2, local3 -> return ''
    if len(local_imports) == len(line.split(',')):
        return ''

    for i in local_imports:
        line = line.replace(i + ',', '')
        # If previows replacement is not done this will work :)
        line = line.replace(i, '')

    if re.match(r'.*\,$', line):
        print line
        # Removing the last losed comma (,) at the end but keep newline
        line = line[:-2] + '\n'

    return line


if __name__=='__main__':

    if len(sys.argv) != 3:
        usage()

    src_main_filename = sys.argv[1]
    dst_filename = sys.argv[2]

    # Todo check if 1 exist -> ok, check if 2 exist -> ko


    f_main_src = open(src_main_filename, 'r')
    f_dst = open(dst_filename, 'w')
    # Get header form main file and write it to the dest file 
    line = f_main_src.readline()  
    while line:
        # Loop while you find spaces or #, exit when first character is found
        if re.match(r'\w', line[0]):
            break
        f_dst.write(line)
        line = f_main_src.readline()

    # Print pys2py stamp
    f_dst.write('#'*80+ '\n')
    f_dst.write('########## File autogenerated merging local') # No newline here
    f_dst.write(' .py libraries using pys2py #########\n')
    f_dst.write('#'*80+ '\n')

    pos_to_embed_local_lib = f_dst.tell()

    all_local_imports = []
    # Search all from X import Y or improt X
    while line:
        if re.match(r'from .*', line) or re.match(r'import .*', line):
            local_imports = find_local_imports(line)
            if local_imports:
                all_local_imports.append(local_imports)
                # Writing original line commented
                f_dst.write('#' + line)
                line_without_local = remove_locals(line, local_imports)
                if line_without_local:
                    # Writing modified line without local imports
                    # only if there is something to write
                    f_dst.write(line_without_local)
            else:
                f_dst.write(line)
        else:
            f_dst.write(line)

        line = f_main_src.readline()

    f_main_src.close()
    f_dst.close()

 

